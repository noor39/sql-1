select last_name, department_id, salary
from employees
where (salary, department_id)IN(select salary, department_id
from employees 
where commission_pct is not null);
2
select e.last_name, d.department_name, e.salary
from employees e  join departments d 
on e.department_id = d.department_id
where (salary, job_id) in(select e.salary, e.job_id
            from employees e join departments d
            on e.department_id= d.location_id
            and d.location_id=1700);





1.A
  create table emp (
  empid number(5),
  last_name varchar2(25),
  first_name varchar2(25),
  email varchar2(80),
  dept_id number(7)
  );

B. 
 alter table emp
 modify last_name varchar2(30);

C. 
 alter table emp
 add commission number(2,2);

D.
 alter table emp
 add constraint my_empid_pk primary key (empid);

e.
 alter table emp
 add constraint my_empid_uk unique (email);

2. 
 create or replace view dept_view as
 select employee_id EMPNO, last_name EMPLOYEE, salary SAL, department_id DEPTNO FROM employees
WHERE DEPARTMENT_ID = 80
WITH CHECK OPTION CONSTRAINT dept_view_ck;

3. 
create sequence dept_id_seq2
start with 200
increment by 50
maxvalue 1000;










1
SELECT location_id, street_address, city, state_province, country_name
from locations
natural join countries;

2
SElECT last_name, department_id, department_name
from employees join departments 
natural join (department_id);
3
SELECT e.last_name, e.job_id, e.department_id, d.department_name
from employees
on (e.department_id = d.department_id)
join locations l
using (location_id)
where lower (l.city)= 'toronto';

4
SELECT w.last_name "Employee", w.employee_id "EMP#", m.last_name "Manager", m.employee_id "Mgr#"
from employees w JOIN employees M
ON (w.manager_id = m.employee_id);
5
SELECT e.last_name "Employee", w.employee_id "EMP#", m.last_name "Manager", m.employee_id "Mgr#"
from employees w 
left outer join employees 
on (w.manager_id = m.employee_id)
order by 2;

6
select e.department_id department, e.last_name employee, c.last_name colleague
from employees e join employees c 
on (e.department_id = c.department_id)
where e.employee_id <> c.employee_id
order by e.department_id, e.last_name, c.last_name;
8
SELECT e.last_name, e.hire_date
from employees e join employees m 










-- pl sql
 DECLARE
    v_fname VARCHAR2(20);
 BEGIN
    SELECT first_name INTO v_fname FROM employees
    WHERE employee_id=100;
 END;
 /

DECLARE 
  v_fname VARCHAR2(20);
BEGIN 
  SELECT first_name INTO v_fname FROM employees
  WHERE employee_id =100;
  END;
  /

  SET SERVEROUTPUT ON
  DBMS_OUTPUT.PUT_LINE(' THE FIRST NAME of the Employee is ' || v_fname);

  DECLARE 
    v_fname VARCHAR2(20);
  BEGIN 
    SELECT first_name
    INTO v_fname 
    FROM employees
    WHERE employee_id =100;
    DBMS_OUTPUT.PUT_LINE (' THE First Name of the Employee is ' || v_fname);
  END;
/

DECLARE 
v_hiredate DATE;
v_location VARCHAR2(13) := 'Atlanta':
v_deptno Number(2) NOT NULL := 10;
c_comm CONSTANT NUMBER := 1400;

-- declaring and initializing pl/sql variables
DECLARE 
 v_myName VARCHAR(20);
BEGIN 
  DBMS_OUTPUT.PUT_LINE('My name is: '|| v_myName);
  v_myName :='John';
  DBMS_OUTPUT.PUT_LINE('My name is: '|| v_myName);
END;
/
-- 
DECLARE 
  v_myName VARCHAR2 (20) := 'John';
BEGIN
v_myName := 'Steven';


declare 
v_lname varchar2(30);
begin
SELECT last_name 
INTO v_lname
from employees
where employee_id =100;
dbms_output.put_line(v_lname);
end;


DECLARE 
v_hiredate  DATE;
v_location VARCHAR2(13) := 'Atlanta';
v_deptno NUMBER(2) NOT NULL := 10;
c_comm CONSTANT NUMBER :=1400;



DECLARE 
v_myName VARCHAR(20);

BEGIN 
DBMS_OUTPUT.PUT_LINE('My name is: '||v_myName);
v_myName := 'John';
DBMS_OUTPUT.PUT_LINE('My name is: '||v_myName);
END;
/

DECLARE v_myName VARCHAR2(20):='John';
BEGIN
v_myName := 'Steven';
DBMS_OUTPUT.PUT_LINE('My name is: '|| v_myName);
END;
/


-- DELIMITERS IN STRING LITERALS

DECLARE 
  v_event VARCHAR2(15);
BEGIN
  v_event := q'!Father's day!';
  DBMS_OUTPUT.PUT_LINE('3rd sunday in June is : '||v_event);
  v_event := q'[Mother's day]';
  DBMS_OUTPUT.PUT_LINE('2nd sunday in May is :'||v_event);

  END;'
  /

  
  



 variable b_result NUMBER
 BEGIN 
 SELECT (SALARY *12)+NVL(commission_pct,0 ) INTO :b_result
 FROM employees WHERE employee_id =144;
 END;
 /
 PRINT b_result 


VARIABLE b_emp_salary NUMBER
BEGIN 
  SELECT salary INTO :b_emp_salary
  FROM employees WHERE employee_id=178;
  END;
  /
  PRINT b_emp_salary
  SELECT first_name, last_name
  FROM employees
  WHERE salary=:b_emp_salary;





  --data type conversion
DECLARE
v_salary NUMBER(6) :=6000;
v_sal_hike VARCHAR2(5) :='1000';
v_total_salary v_salary %TYPE;
BEGIN
v_total_salary :=v_salary + v_sal_hike;
DBMS_OUTPUT.PUT_LINE ('Total salary is: '||v_total_salary);
END;
/
-- run succesfully
DECLARE
v_salary NUMBER(6) :=6000;
v_sal_hike VARCHAR2 (5):='1000';
v_total_salary v_salary%TYPE;
BEGIN
v_total_salary :=v_salary+v_sal_hike;
DBMS_OUTPUT.PUT_LINE(v_total_salary);
END;
/



DECLARE
v_date_of_joining DATE :='20-Feb-2000';
BEGIN 
DBMS_OUTPUT.PUT_LINE('Date of joining is :'|| v_date_of_joining);
END;
/
-- error in  line 2 data type conversion

DECLARE 
v_date_of_joining DATE:='February 02, 2000';
BEGIN
DBMS_OUTPUT.PUT_LINE('Date of joining is :' ||v_date_of_joining);
END;
/
-- Explicit data type conversion
DECLARE
v_date_of_joining DATE:=TO_DATE('February 02, 2000', 'Month DD, YYYY');
BEGIN
DBMS_OUTPUT.PUT_LINE('Date of joining is :'|| v_date_of_joining);
END;
/


